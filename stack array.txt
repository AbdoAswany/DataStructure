#include <iostream>

using namespace std;
#define MAX_SIZE 100

class ArrayStack {
private:
    int stack[MAX_SIZE];
    int top;

public:
    ArrayStack() {
        top = -1;
    }

    bool isEmpty() {
        return top == -1;
    }

    bool isFull() {
        return top == MAX_SIZE - 1;
    }

    void push(int item) {
        if (isFull()) {
            cout << "Stack is full. Cannot push item " << item << ".\n";
            return;
        }

        top++;
        stack[top] = item;
        cout << "Item " << item << " pushed into the stack.\n";
    }

    int pop() {
        if (isEmpty()) {
            cout << "Stack is empty. Cannot pop from an empty stack.\n";
            return -1;
        }

        int item = stack[top];
        top--;
        cout << "Item " << item << " popped from the stack.\n";
        return item;
    }

    void display() {
        if (isEmpty()) {
            cout << "Stack is empty.\n";
            return;
        }

        cout << "Stack: ";
        for (int i = top; i >= 0; i--) {
            cout << stack[i] << " ";
        }
        cout << endl;
    }
};

int main() {
    ArrayStack stack;

    stack.push(10);
    stack.push(20);
    stack.push(30);
    stack.display();

    stack.pop();
    stack.display();

    stack.pop();
    stack.pop();
    stack.display();
    return 0;
}
